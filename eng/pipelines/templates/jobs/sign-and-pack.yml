parameters:
- name: TimeoutInMinutes
  type: number
  default: 120

jobs:
- job: SignAndPackNPM
  ${{ if parameters.SkipSigning }}:
    displayName: "Pack npm packages"
  ${{ else }}:
    displayName: "Sign and Pack npm packages"
  condition: and(succeededOrFailed(), ne(variables['Skip.Analyze'], 'true'))
  timeoutInMinutes: ${{ parameters.TimeoutInMinutes }}
  pool: # Binary signing of mac bits needs to happen on mac see https://github.com/Azure/azure-mcp/blob/4ff032fafc77bc618738879b7028665c0de2e632/eng/scripts/Compress-ForSigning.ps1#L40
    name: $(MACPOOL)
    vmImage: $(MACVMIMAGE)
    os: macos
  steps:
  - checkout: self

  - download: current
    displayName: Download artifacts

  - task: Powershell@2
    displayName: "Compress packages"
    inputs:
      pwsh: true
      filePath: $(Build.SourcesDirectory)/eng/scripts/Compress-ForSigning.ps1
      arguments: >
        -ArtifactsPath '$(Pipeline.Workspace)'
        -ArtifactPrefix '$(PipelineArtifactName)_'
        -OutputPath '$(Build.ArtifactStagingDirectory)/npm/signed'

  - ${{ if not(parameters.SkipSigning) }}:
    - template: pipelines/steps/binary-signing.yml@azure-sdk-build-tools
      parameters:
        SigningKeyCode: 'CP-230012' # MS Cert
        BinaryPath: $(Build.ArtifactStagingDirectory)/signed
        BinaryPattern: |
          win-*/**/azmcp.dll
          win-*/**/azmcp.exe
          win-*/**/AzureMcp*.dll

    - template: pipelines/steps/binary-signing.yml@azure-sdk-build-tools
      parameters:
        SigningKeyCode: 'CP-231522' # MS 3rd Party Cert
        BinaryPath: $(Build.ArtifactStagingDirectory)/signed
        BinaryPattern: |
          win-*/**/ModelContextProtocol*.dll
          win-*/**/Npgsql.dll
          win-*/**/OpenAI.dll
          win-*/**/OpenTelemetry*.dll

    - template: pipelines/steps/azd-cli-mac-signing.yml@azure-sdk-build-tools
      parameters:
        MacPath: $(Build.ArtifactStagingDirectory)/npm/signed
        MacPattern: "**/*.zip"

  - task: Powershell@2
    displayName: "Expand packages"
    inputs:
      pwsh: true
      filePath: $(Build.SourcesDirectory)/eng/scripts/Expand-AfterSigning.ps1
      arguments: >
        -Path '$(Build.ArtifactStagingDirectory)/npm/signed'

  - ${{ if not(parameters.SkipSigning) }}:
    - template: /eng/common/pipelines/templates/steps/publish-1es-artifact.yml
      parameters:
        ArtifactPath: $(Build.ArtifactStagingDirectory)/npm/signed
        ArtifactName: npm_$(PipelineArtifactName)_signed
        SbomEnabled: ${{ ne(variables['Build.Reason'], 'PullRequest') }}

  - task: Powershell@2
    displayName: "Pack modules"
    inputs:
      pwsh: true
      filePath: $(Build.SourcesDirectory)/eng/scripts/Pack-Modules.ps1
      arguments: >
        -ArtifactsPath '$(Build.ArtifactStagingDirectory)/npm/signed'
        -OutputPath '$(Build.ArtifactStagingDirectory)/npm/packed'
        -Version '$(Version)'

  - template: /eng/common/pipelines/templates/steps/publish-1es-artifact.yml
    parameters:
      ArtifactPath: $(Build.ArtifactStagingDirectory)/npm/packed
      ArtifactName: npm_$(PipelineArtifactName)_packed
      SbomEnabled: ${{ ne(variables['Build.Reason'], 'PullRequest') }}

- job: SignAndPackNuget
  ${{ if parameters.SkipSigning }}:
    displayName: "Pack nuget packages"
  ${{ else }}:
    displayName: "Sign and Pack nuget packages"
  condition: and(succeededOrFailed(), ne(variables['Skip.Analyze'], 'true'))
  timeoutInMinutes: ${{ parameters.TimeoutInMinutes }}
  pool:
    name: $(WINDOWSPOOL)
    image: $(WINDOWSVMIMAGE)
    os: windows

  steps:
  - checkout: self
    path: s

  - checkout: azure-sdk-build-tools
    path: azure-sdk-build-tools

  - download: current
    displayName: Download artifacts

  - pwsh: |
      $ArtifactsPath = "$(Pipeline.Workspace)"
      $ArtifactPrefix = "$(PipelineArtifactName)_"
      $OutputPath = Join-Path $(Build.ArtifactStagingDirectory) nuget signed

      $artifactDirectories = Get-ChildItem -Path $ArtifactsPath -Directory
      | Where-Object { $_.Name -like "$ArtifactPrefix*" }
      | Where-Object { $_.Name -notlike '*FailedAttempt*' }

      foreach ($artifactDirectory in $artifactDirectories) {
        $nugetPackageDir = $artifactDirectory | Get-ChildItem -Filter "nuget" -Recurse -Directory
        $os_arch = $artifactDirectory.Name -replace "$ArtifactPrefix", ''
        $destinationPath = Join-Path $OutputPath $os_arch
        $sourcePath = Join-Path $nugetPackageDir '*'
        New-Item -ItemType Directory -Force -Path $destinationPath | Out-Null

        Write-Host "Copying $sourcePath to $destinationPath`n" -ForegroundColor Yellow
        Copy-Item -Path $sourcePath -Destination $destinationPath -Recurse -Force
      }

      Write-Host "`n##[group] Staged Artifacts"
      Get-ChildItem -Path $OutputPath -Recurse | Select-Object FullName | Out-Host
      Write-Host "##[endgroup]`n"
    displayName: "Pack NuGet packages"

  - template: pipelines/steps/net-signing.yml@azure-sdk-build-tools
    parameters:
      PackagesPath: $(Build.ArtifactStagingDirectory)/nuget/signed
      BuildToolsPath: $(Pipeline.Workspace)/azure-sdk-build-tools

  - ${{ if not(parameters.SkipSigning) }}:
    - template: /eng/common/pipelines/templates/steps/publish-1es-artifact.yml
      parameters:
        ArtifactPath: $(Build.ArtifactStagingDirectory)/nuget/signed
        ArtifactName: nuget_$(PipelineArtifactName)_signed
        SbomEnabled: ${{ ne(variables['Build.Reason'], 'PullRequest') }}